###################################
#
# mc454.conf
#
# Provides:
#     - configuration parameters for the mc454 programs, including:
#         * linkers.py
#         * microsatellites.py
#         * blat.py
#         * grouper.py
#         * levenshtein.py
# 
# Part of mc454:
#     - parsing hierarchically tagged sequence reads
#     - microsatellite identification
#     - sequence pooling/clustering
#     - microsatellite primer design
# 
###################################

# =========================
# = General Configuration =
# =========================
[Input]
# paths to the input fasta and qual files
Type                = Fasta
#SEQUENCE            = /Users/bcf/git/brant/mc454/test/linkerTest/2010_2_12_503_GB50SCI02.sff_MID.RL10.sff.400.fna
#QUAL                = /Users/bcf/git/brant/mc454/test/linkerTest/2010_2_12_503_GB50SCI02.sff_MID.RL10.sff.400.qual

SEQUENCE = /Users/bcf/git/brant/mc454/test/midLinkerTest/454_test_sequence.fna
QUAL     = /Users/bcf/git/brant/mc454/test/midLinkerTest/454_test_sequence.qual

#SEQUENCE            = /Users/bcf/python/schisto/sequence/schisto_enrich_02_12_09/2010_2_12_503.pool.MID.RL10.fna
#QUAL                = /Users/bcf/python/schisto/sequence/schisto_enrich_02_12_09/2010_2_12_503.pool.MID.RL10.qual

[Steps]
# steps to run in process
Trim                = True
MidTrim             = True
LinkerTrim          = True
RepeatMask          = True
TwoBit              = True

[GeneralParameters]
# This is the lower score we will accept before we hard-mask a base
MinQualScore        = 10
# use fuzzy matching to find MID or linker sequences
FuzzyMatching       = True
# this is the amount of space allowed between the 5' end and the MID
MidGap              = 5
# this is the amount of space allowed between the MID and the linker
LinkerGap           = 22
# this is slow
CheckForConcatemers = False  

[Multiprocessing]
# Use it
MULTIPROCESSING     = False
# Set number of cores manually (`Auto` is recommended)
PROCESSORS          = Auto

# =======================
# = Database Parameters =
# =======================

[Database]
#Database parameters (MySQL)
#ENGINE              = mysql
DATABASE            = 454_msatcommander
USER                = python
PASSWORD            = BgDBYUTvmzA3

# =======================
# = Sequence Tag Groups =
# =======================

[MidGroups]
# when searching for MIDs only, sequence groupings by MID
MID13 = Bob
MID14 = John
MID15 = Harry

[LinkerGroups]
# when searching for Linkers only, sequence groupings by Linker
SimpleX1 = Schisto3
SimpleX2 = Schisto4
SimpleX3 = Schisto6
SimpleX5 = Schisto13
SimpleX6 = Schisto14

[MidLinkerGroups]
# A cluster is the grouping of MID tag and Linker that delineates the output 
# file into which sequences will be sorted.
MID15, SimpleX1 = test

# ===================================
# = Sequence Tag Section (ADVANCED) =
# ===================================

[Mid]
# list MID tags used in runs.  There may be more MID tags listed here than 
# used in the [Clusters] section.  When you are searching for MIDs and Linkers
# the program will intelligently create the lists of MIDs that go with linkers
# according to the cluster variables you declare in [MidGroups] or 
# [MidLinkerGroups]
MID13 = CATAGTAGTG
MID14 = CGAGAGATAC
MID15 = ATACGACGTA
MID16 = TCACGTACTA
MID17 = CGTCTAGTAC
MID19 = TGTACTACTC

[Linker]
# the linker used with each MID tag.  There may be more MID tags listed here 
# than used in the [Clusters] section.
SimpleX1    = CGTCGTGCGGAATC
SimpleX2    = GCTGCTGGCGAATC
SimpleX3    = CGTGCTGCGGAACT
SimpleX4    = GCAGCAGCGGAATC
SimpleX5    = CGAGCAGCGGAACT
SimpleX6    = GCACGAGCGGAACT
SimpleX7    = GGTCGAGCGGAATG
SimpleX8    = GGTGCAGGCGAATG
SimpleX9    = CGTGCAGCGGAAGT
SimpleX10   = GCAGCGTCGGAATG
SimpleX11   = CGAGCGAGCGAAGT
SimpleX12   = GCTGGCGTCGAAGT
SimpleX13   = CCAGCACCGGAACA
SimpleX14   = CCTGGGCACGAAGA
SimpleX15   = CGTCGTGCGGAAAC
SimpleX16   = GCAGCGTCGGAAAG
SimpleX17   = GCTCCTGGCGAATC